# UNNAMED SPACE SHOOTER GAME
# Z3D ENGINE
# ----
#
# Krzysztof Jankowski
# 15/138 P1X
# http://p1x.in
# The MIT License (MIT)


#
# SETTINGS
#
HGR
updateMode = 0
mouseoff

#
# RENDER VARIABLES
#

FPS = 16
frame_ms = 1000/FPS
last_frame_time = TIME
dt = 0.01
horizon = 170

#
# GAME VARIABLES
#

z_factor = 1.15
max_lines = 7
dim t_lines(max_lines)

left_wing = 0
right_wing = 0
pos_x = gwidth/2
pos_y = 48
pos_z = horizon-pos_y
k_x = pos_x
steer_speed = 18
accel = 0.25

max_lasers=24
dim laser_x(max_lasers)
dim laser_z(max_lasers)
dim laser_mode(max_lasers)
weapon_mode = 1
weapon_reload = -1
weapon_reload_time = 3

#
# MAIN LOOP
#

PROC pre_render()

CYCLE
  last_frame_time = TIME
  #cls2
  PROC inputs()
  PROC render(dt)

  UPDATE
  diff = TIME - last_frame_time
  dt = diff/1000
  if diff < frame_ms then
    wait((frame_ms - diff )/1000)
  endif
REPEAT

#
# RENDER PROCEDURES
#

DEF PROC pre_render()

  for s = 0 to 64 cycle
    c = rnd(128)
    rgbColour(129-c,129-c,129-c)
    plot(rnd(gwidth),horizon+rnd(gheight-horizon))
  repeat

  t_lines(0) = 0.1
  for i = 1 to max_lines cycle
    t_lines(i) = t_lines(i-1) * z_factor * 1.7
  repeat


  # fill lasers
  for i = 0 to max_lasers cycle
    laser_x(i) = -1
    laser_z(i) = -1
  repeat

ENDPROC

#
#

DEF PROC render(dt)

  PROC r_terrain()
  PROC r_weapons()
  PROC r_ship()
ENDPROC


#
#

DEF PROC r_terrain()
 rgbColour(90,50,50)
 rect(0,0,gwidth,horizon,true)

 rgbColour(60,0,0)
  for i = 0 to max_lines cycle
    z_old = t_lines(i)
    z_new = z_old * z_factor

    if z_new > horizon then
      z_new = 1
    endif

    if z_new - z_old > i+1 * z_factor then
      t_lines(i) = 0.1
    endif

    t_lines(i) = z_new
    z_new = z_new >> 0
    line(0,horizon-z_new,gwidth,horizon-z_new)

  repeat

ENDPROC

#
#

DEF PROC r_ship()
  if k_x < pos_x then
    v = (pos_x-k_x)*accel
    pos_x = pos_x - v
    left_wing = - min(4,v>>0)
    right_wing = min(4,v>>0)
  endif
  if k_x > pos_x then
    v = (k_x-pos_x)*accel
    pos_x = pos_x + v
    left_wing = min(4,v>>0)
    right_wing = - min(4,v>>0)
  endif

  if abs(k_x-pos_x) < 2 then
    k_x = pos_x
    left_wing = 0
    right_wing = 0
  endif

  rgbColour(0,0,255)
  draw_x = pos_x >> 0

  for i = 0 to 1 cycle
    draw_y = pos_y >> 0
    rgbColour(96,96,255)
    if i = 0 then
      rgbColour(60,0,0)
      draw_y = draw_y - 14
    endif

    polyStart
      polyPlot(draw_x,draw_y)
      polyPlot(draw_x-16,draw_y-8+left_wing)
      polyPlot(draw_x+16,draw_y-8+right_wing)
      polyPlot(draw_x,draw_y)
    polyEnd
  repeat

  rgbColour(128,128,255)
  polyStart
    polyPlot(draw_x,draw_y)
    polyPlot(draw_x-16,draw_y-8+left_wing)
    polyPlot(draw_x,draw_y-8+(right_wing+left_wing))
    polyPlot(draw_x,draw_y)
  polyEnd

ENDPROC


DEF PROC r_weapons()

  if weapon_reload > -1 then
    weapon_reload = weapon_reload - 1
  endif

  rgbColour(255,255,255)
  for i = 0 to max_lasers cycle
    if laser_z(i) > 0 then
      zf = laser_z(i) * 0.04
      draw_x = laser_x(i) >> 0
      rgbColour(128,128,128)
      if laser_mode(i) = 2 then
        if i mod 2 = 0 then
          draw_x = draw_x - 3*zf >> 0          
         else
          draw_x = draw_x + 3*zf >>0       
        endif
        rgbColour(192,192,255)
      endif
      draw_y = horizon-laser_z(i) >> 0

      polyStart
        polyPlot(draw_x-(zf*0.5),draw_y)
        polyPlot(draw_x-(zf*0.5),draw_y-(zf*zf))
        polyPlot(draw_x+zf,draw_y-(zf*zf))
        polyPlot(draw_x+zf,draw_y)
        polyPlot(draw_x-(zf*0.5),draw_y)
      polyEnd
      laser_z(i) = laser_z(i)/z_factor
      if laser_z(i) < 3 then
        laser_z(i) = -1
        laser_x(i) = -1
      endif
    endif
  repeat

ENDPROC

#
# INPUTS
#

DEF PROC inputs()

  if scanKeyboard(scanLeft) then
    if k_x > 16 then
        k_x = k_x - steer_speed
    endif
  endif

  if scanKeyboard(scanRight) then
    if k_x < gwidth - 16 then
        k_x = k_x + steer_speed
    endif
  endif

  if scanKeyboard(scanSpace) then
    PROC shoot_weapon()
  endif

  if scanKeyboard(scan1) then
    weapon_mode = 1
  endif

  if scanKeyboard(scan2) then
    weapon_mode = 2
  endif

ENDPROC

#
# WEAPONS
#

DEF PROC shoot_weapon()

  if weapon_reload < 0 then
    for i = 0 to max_lasers cycle
      if laser_z(i) < 0 then
        laser_z(i) = pos_z-19
        laser_x(i) = pos_x
        laser_mode(i) = weapon_mode
        weapon_reload = weapon_reload_time-weapon_mode
        break
      endif
    repeat
  endif

ENDPROC
